PART
{
    //The stabilizer leg for the Lynx Rover of the Feline Utility Rover series

    //---Metadata---
    name = Lynx_AttachableThruster
    module = Part
    author = Nils277

    //---Visual---
    MODEL
    {
        model = KerbetrotterLtd/FelineUtilityRover/Assets/Parts/Thruster_Side
    }
    rescaleFactor = 1
    fx_gasBurst_white = 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, decouple
    sound_vent_large = decouple

    //---Nodes and Attachment---
    attachRules = 0,1,0,0,1
    node_attach = 0, 0, 0, 1, 0, 0, 0
    
    //---Costs & Tech---
    TechRequired = landing
    entryCost = 5000
    cost = 900

    //---Descriptions---
    category = Engine
    title = #LOC_FUR.sidethruster.title
    manufacturer = #LOC_FUR.manufacturer
    description = #LOC_FUR.sidethruster.description
    vesselType = Rover
    subcategory = 0

    //---Physical---
    mass = 0.15
    crashTolerance = 40
    maxTemp = 1200
    breakingForce = 200
    breakingTorque = 200
    bulkheadProfiles = srf

    //---Drag---
    dragModelType = default
    maximum_drag = 0.2
    minimum_drag = 0.2
    angularDrag = 1

    //---General---
    tags = #LOC_FUR.sidethruster.tags
    
    EFFECTS
    {
        running
        {
            AUDIO
            {
                channel = Ship
                clip = sound_rocket_mini
                volume = 0.0 0.0
                volume = 1.0 1.0
                pitch = 0.0 0.75
                pitch = 1.0 0.95
                loop = true
            }
            MODEL_MULTI_PARTICLE
            {
                modelName = KerbetrotterLtd/FelineUtilityRover/FX/fx_small_blue
                transformName = ThrustTransform
                emission = 0.0 0.0
                emission = 0.05 0.05
                emission = 0.075 0.2
                emission = 1.0 1.0
                speed = 0.0 0.3
                speed = 1.0 1.0
            }           
        }
        engage
        {
            AUDIO
            {
                channel = Ship
                clip = sound_vent_medium
                loop = false
            }
        }
        disengage
        {
            AUDIO
            {
                channel = Ship
                clip = sound_vent_soft
                loop = false
            }
        }
    }
    
    MODULE
    {
        name = ModuleEnginesFX
        thrustVectorTransformName = ThrustTransform
        exhaustDamage = True
        ignitionThreshold = 0.1
        minThrust = 0
        maxThrust = 40
        heatProduction = 200
        fxOffset = 0, 0, 0
        EngineType = LiquidFuel
        exhaustDamageDistanceOffset = 0.15
        PROPELLANT
        {
            name = LiquidFuel
            ratio = 0.9
            DrawGauge = True
        }
        PROPELLANT
        {
            name = Oxidizer
            ratio = 1.1
        }
        atmosphereCurve
        {
            key = 0 320
            key = 1 270
            key = 7 0.001
        }
    }
    
    MODULE
    {
        name = ModuleGimbal
        gimbalTransformName = Nozzle
        gimbalRange = 3
    }
    
    MODULE
    {
        name = ModuleAnimateGeneric
        animationName = ExtendThruster
        actionGUIName = #autoLOC_6001337
        startEventGUIName = #LOC_KERBETROTTER.dockingport.extend
        endEventGUIName = #LOC_KERBETROTTER.dockingport.retract
    }
    
    MODULE
    {
        name = ModuleDecouple
        ejectionForce = 60
        explosiveNodeID = srf
        stagingEnabled = False
        stagingToggleEnabledEditor = True
        stagingToggleEnabledFlight = True
    }
	
	MODULE
	{
		name = ModuleCargoPart
		packedVolume = 150
		stackableQuantity = 2
	}
    
    MODULE
    {
        name = ModuleTestSubject
        useStaging = True
        useEvent = True
        situationMask = 127
        CONSTRAINT
        {
            type = REPEATABILITY
            value = ALWAYS
            prestige = Trivial
        }
        CONSTRAINT
        {
            type = REPEATABILITY
            value = BODYANDSITUATION
            prestige = Significant
        }
        CONSTRAINT
        {
            type = REPEATABILITY
            value = ONCEPERPART
            prestige = Exceptional
        }
        CONSTRAINT
        {
            type = ALTITUDEENV
            test = GT
            value = 4000
            prestige = Trivial
        }
        CONSTRAINT
        {
            type = ALTITUDEENV
            test = LT
            value = 8000
            prestige = Trivial
        }
        CONSTRAINT
        {
            type = ALTITUDEENV
            test = GT
            value = 2000
            prestige = Significant
        }
        CONSTRAINT
        {
            type = ALTITUDEENV
            test = LT
            value = 4000
            prestige = Significant
        }
        CONSTRAINT
        {
            type = ALTITUDEENV
            test = GT
            value = 1000
            prestige = Exceptional
        }
        CONSTRAINT
        {
            type = ALTITUDEENV
            test = LT
            value = 2000
            prestige = Exceptional
        }
        CONSTRAINT
        {
            type = ALTITUDE
            test = GT
            value = 0 // this just registers altitude as something to care about
            situationMask = 8
        }
        CONSTRAINT
        {
            type = ALTITUDE
            test = LT
            value = 300000
            situationMask = 16
            body = _NotSun
        }
        CONSTRAINT
        {
            type = ALTITUDE
            test = LT
            value = 600000
            situationMask = 32
            body = _NotSun
        }
        CONSTRAINT
        {
            type = SPEED
            test = GT
            value = 0
            situationMask = 8
            prestige = Trivial
        }
        CONSTRAINT
        {
            type = SPEED
            test = LT
            value = 600
            situationMask = 8
            prestige = Trivial
        }
        CONSTRAINT
        {
            type = SPEED
            test = GT
            value = 300
            situationMask = 8
            prestige = Significant
        }
        CONSTRAINT
        {
            type = SPEED
            test = LT
            value = 1200
            situationMask = 8
            prestige = Significant
        }
        CONSTRAINT
        {
            type = SPEED
            test = GT
            value = 600
            situationMask = 8
            prestige = Exceptional
        }
        CONSTRAINT
        {
            type = SPEED
            test = LT
            value = 2500
            situationMask = 8
            prestige = Exceptional
        }
        CONSTRAINT
        {
            type = SPEEDENV
            test = LT
            value = 200
            prestige = Trivial
        }
        CONSTRAINT
        {
            type = SPEEDENV
            test = GT
            value = 100
            prestige = Trivial
        }
        CONSTRAINT
        {
            type = SPEEDENV
            test = LT
            value = 100
            prestige = Significant
        }
        CONSTRAINT
        {
            type = SPEEDENV
            test = GT
            value = 50
            prestige = Significant
        }
        CONSTRAINT
        {
            type = SPEEDENV
            test = LT
            value = 50
            prestige = Exceptional
        }
        CONSTRAINT
        {
            type = SPEEDENV
            test = GT
            value = 20
            prestige = Exceptional
        }
    }
}
