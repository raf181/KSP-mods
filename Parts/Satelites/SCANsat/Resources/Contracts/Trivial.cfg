CONTRACT_TYPE
{
	name				= SCAN_Trivial
	title				= #autoLOC_SCANsat_trivial_0001
	genericTitle		= #autoLOC_SCANsat_trivial_0002
	group				= ScanSatOfficial
	topic				= Science
	subject				= Kerbal
	agent				= #autoLOC_SCANsat_Agents_Name
	notes				= #autoLOC_SCANsat_trivial_0003
	synopsis			= #autoLOC_SCANsat_trivial_0004
	completedMessage	= #autoLOC_SCANsat_trivial_0005
	minExpiry			= 1
	maxExpiry			= 7
	deadline			= Random(300, 500) * @/targetBodyValid1.Multiplier()
	cancellable			= true
	declinable			= true
	autoAccept			= false
	targetBody			= @/targetBodyValid1
		
	// Contract rewards
	rewardScience		= 0
	rewardReputation	= 1
	rewardFunds			= Random(40000, 60000.0)
	failureReputation	= 1
	failureFunds		= Random(1000, 10000.0)
	advanceFunds		= Random(2000, 10000.0)
	prestige			= Trivial
	
    DATA_EXPAND
	{
		type			= CelestialBody
		targetBody1		= @ScanSatOfficial:homeBodies
	}
	
	DATA_EXPAND
	{
		type			= string
		scanString1		= [ "AltimetryLoRes", "Biome", "AltimetryHiRes", "ResourceLoRes", "ResourceHiRes","VisualHiRes" ]
	}
	
	DATA
	{
		type			= string
		uniquenessCheck		= CONTRACT_ALL
		scanReadString1		= @/scanString1 == "AltimetryLoRes" ? "a Low Resolution Altimetry" : @/scanString1 == "Biome" ? "a Multispectral" : @/scanString1 == "AltimetryHiRes" ? "a High Resolution Altimetry" : @/scanString1 == "ResourceLoRes" ? "a Low Resolution Resource" : @/scanString1	== "ResourceHiRes" ? "a High Resolution Resource" : "a High Resolution Visual"
	}
	
	DATA
	{
		type			= CelestialBody
		requiredValue		= true
		title			= #autoLOC_SCANsat_trivial_0006
		uniquenessCheck		= CONTRACT_ALL
		targetBodyValid1	= @/targetBody1
	}
	
	PARAMETER
	{
		name			= SCANsatCoverage
		type			= SCANsatCoverage
		targetBody		= @/targetBodyValid1
		coverage		= 75
		scanType		= @/scanString1
	}
	REQUIREMENT
	{
		name			= SCANsatCoverage
		type			= SCANsatCoverage
		targetBody		= @/targetBodyValid1
		minCoverage		= 0.0
		maxCoverage		= 70
		scanType		= @/scanString1
		title			= #autoLOC_SCANsat_trivial_0007
	}
	REQUIREMENT
	{
		name			= Orbit
		type			= Orbit
		targetBody		= HomeWorld()
	}
	REQUIREMENT
	{
		name			= PartUnlocked
		type			= PartUnlocked
		part			= @/scanString1		== "AltimetryLoRes" ? scansat-radar-poseidon-3b-1 : @/scanString1 == "Biome" ? scansat-multi-modis-1 : @/scanString1 == "AltimetryHiRes" ? scansat-sar-paz-1 : @/scanString1 == "ResourceLoRes" ? scansat-multi-abi-1 : @/scanString1	== "ResourceHiRes" ? scansat-resources-crism-1 : scansat-recon-ikonos-1
	}
}